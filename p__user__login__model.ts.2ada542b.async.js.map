{"version":3,"sources":["src/pages/user/login/model.ts","src/pages/user/login/service.ts","src/pages/user/login/utils/utils.ts"],"names":["_router","__webpack_require__","_service","_utils","Model","namespace","state","status","undefined","effects","login","_regenerator","default","mark","_ref","_ref2","payload","call","put","response","urlParams","params","redirect","redirectUrlParams","wrap","_context","prev","next","fakeAccountLogin","sent","type","URL","window","location","href","getPageQuery","origin","substr","length","match","indexOf","abrupt","routerRedux","replace","stop","getCaptcha","_ref3","_ref4","_context2","getFakeCaptcha","reducers","changeLoginStatus","_ref5","setAuthority","currentAuthority","_objectSpread2","_umiRequest","_interopRequireDefault","_callee","method","data","_callee2","mobile","concat","_qs","parse","split","authority","proAuthority","localStorage","setItem","JSON","stringify"],"mappings":"sNAEAA,EAAAC,EAAA,QACAC,EAAAD,EAAA,QACAE,EAAAF,EAAA,QAyBMG,GACJC,UAAW,YAEXC,OACEC,YAAQC,GAGVC,SACGC,MADMC,EAAAC,QAAAC,KAAA,SAAAH,EAAAI,EAAAC,GAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAZ,EAAAC,QAAAY,KAAA,SAAAC,GAAA,eAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEY,OADVX,EADFF,EACEE,QAAaC,EADfF,EACeE,KAAMC,EADrBH,EACqBG,IADrBO,EAAAE,KAAA,EAEkBV,EAAKf,EAAA0B,iBAAkBZ,GAFzC,OAGL,OADMG,EAFDM,EAAAI,KAAAJ,EAAAE,KAAA,EAGCT,GACJY,KAAM,oBACNd,QAASG,IALN,UAQmB,OAApBA,EAASZ,OARR,CAAAkB,EAAAE,KAAA,YASGP,EAAY,IAAIW,IAAIC,OAAOC,SAASC,MACpCb,GAAS,EAAAlB,EAAAgC,gBACTb,EAAaD,EAAbC,UACFA,EAZD,CAAAG,EAAAE,KAAA,YAaKJ,EAAoB,IAAIQ,IAAIT,GAC9BC,EAAkBa,SAAWhB,EAAUgB,OAd1C,CAAAX,EAAAE,KAAA,SAeCL,EAAWA,EAASe,OAAOjB,EAAUgB,OAAOE,QACxChB,EAASiB,MAAM,YACjBjB,EAAWA,EAASe,OAAOf,EAASkB,QAAQ,KAAO,IAjBtDf,EAAAE,KAAA,wBAoBCK,OAAOC,SAASC,KAAOZ,EApBxBG,EAAAgB,OAAA,kBAwBH,OAxBGhB,EAAAE,KAAA,GAwBGT,EAAIlB,EAAA0C,YAAYC,QAAQrB,GAAY,MAxBvC,yBAAAG,EAAAmB,SAAAlC,KA4BNmC,WA5BMlC,EAAAC,QAAAC,KAAA,SAAAgC,EAAAC,EAAAC,GAAA,IAAA/B,EAAAC,EAAA,OAAAN,EAAAC,QAAAY,KAAA,SAAAwB,GAAA,eAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,OA6BL,OADYX,EA5BP8B,EA4BO9B,QAAaC,EA5BpB8B,EA4BoB9B,KA5BpB+B,EAAArB,KAAA,EA6BCV,EAAKf,EAAA+C,eAAgBjC,GA7BtB,wBAAAgC,EAAAJ,SAAAC,MAiCTK,UACEC,kBADQ,SACU7C,EADV8C,GAC4B,IAATpC,EAASoC,EAATpC,QAEzB,OADA,EAAAb,EAAAkD,cAAarC,EAAQsC,mBACrB,EAAAC,EAAA3C,YACKN,GACHC,OAAQS,EAAQT,OAChBuB,KAAMd,EAAQc,YAMP1B,4LCjFfoD,EAAAC,EAAAxD,EAAA,kBAGsB2B,uFAAf,SAAA8B,EAAgCrC,GAAhC,OAAAV,EAAAC,QAAAY,KAAA,SAAAC,GAAA,eAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAgB,OAAA,UACE,EAAAe,EAAA5C,SAAQ,sBACb+C,OAAQ,OACRC,KAAMvC,KAHH,wBAAAI,EAAAmB,SAAAc,uCAOeT,uFAAf,SAAAY,EAA8BC,GAA9B,OAAAnD,EAAAC,QAAAY,KAAA,SAAAwB,GAAA,eAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,cAAAqB,EAAAP,OAAA,UACE,EAAAe,EAAA5C,SAAA,6BAAAmD,OAAqCD,KADvC,wBAAAd,EAAAJ,SAAAiB,uJCVP,IAAAG,EAAA/D,EAAA,QAEM,SAAUkC,IACd,OAAO,EAAA6B,EAAAC,OAAMjC,OAAOC,SAASC,KAAKgC,MAAM,KAAK,IAGzC,SAAUb,EAAac,GAC3B,IAAMC,EAAoC,kBAAdD,GAA0BA,GAAaA,EACnE,OAAOE,aAAaC,QAAQ,qBAAsBC,KAAKC,UAAUJ","file":"p__user__login__model.ts.2ada542b.async.js","sourcesContent":["import { AnyAction, Reducer } from 'redux';\nimport { EffectsCommandMap } from 'dva';\nimport { routerRedux } from 'dva/router';\nimport { fakeAccountLogin, getFakeCaptcha } from './service';\nimport { getPageQuery, setAuthority } from './utils/utils';\n\nexport interface StateType {\n  status?: 'ok' | 'error';\n  type?: string;\n  currentAuthority?: 'user' | 'guest' | 'admin';\n}\n\nexport type Effect = (\n  action: AnyAction,\n  effects: EffectsCommandMap & { select: <T>(func: (state: StateType) => T) => T },\n) => void;\n\nexport interface ModelType {\n  namespace: string;\n  state: StateType;\n  effects: {\n    login: Effect;\n    getCaptcha: Effect;\n  };\n  reducers: {\n    changeLoginStatus: Reducer<StateType>;\n  };\n}\n\nconst Model: ModelType = {\n  namespace: 'userLogin',\n\n  state: {\n    status: undefined,\n  },\n\n  effects: {\n    *login({ payload }, { call, put }) {\n      const response = yield call(fakeAccountLogin, payload);\n      yield put({\n        type: 'changeLoginStatus',\n        payload: response,\n      });\n      // Login successfully\n      if (response.status === 'ok') {\n        const urlParams = new URL(window.location.href);\n        const params = getPageQuery();\n        let { redirect } = params as { redirect: string };\n        if (redirect) {\n          const redirectUrlParams = new URL(redirect);\n          if (redirectUrlParams.origin === urlParams.origin) {\n            redirect = redirect.substr(urlParams.origin.length);\n            if (redirect.match(/^\\/.*#/)) {\n              redirect = redirect.substr(redirect.indexOf('#') + 1);\n            }\n          } else {\n            window.location.href = redirect;\n            return;\n          }\n        }\n        yield put(routerRedux.replace(redirect || '/'));\n      }\n    },\n\n    *getCaptcha({ payload }, { call }) {\n      yield call(getFakeCaptcha, payload);\n    },\n  },\n\n  reducers: {\n    changeLoginStatus(state, { payload }) {\n      setAuthority(payload.currentAuthority);\n      return {\n        ...state,\n        status: payload.status,\n        type: payload.type,\n      };\n    },\n  },\n};\n\nexport default Model;\n","import request from 'umi-request';\nimport { FromDataType } from './index';\n\nexport async function fakeAccountLogin(params: FromDataType) {\n  return request('/api/login/account', {\n    method: 'POST',\n    data: params,\n  });\n}\n\nexport async function getFakeCaptcha(mobile: string) {\n  return request(`/api/login/captcha?mobile=${mobile}`);\n}\n","import { parse } from 'qs';\n\nexport function getPageQuery() {\n  return parse(window.location.href.split('?')[1]);\n}\n\nexport function setAuthority(authority: string | string[]) {\n  const proAuthority = typeof authority === 'string' ? [authority] : authority;\n  return localStorage.setItem('antd-pro-authority', JSON.stringify(proAuthority));\n}\n"],"sourceRoot":""}